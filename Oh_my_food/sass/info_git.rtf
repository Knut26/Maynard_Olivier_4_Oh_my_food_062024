{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red29\green19\blue42;\red0\green0\blue0;\red255\green255\blue255;
\red0\green0\blue0;\red224\green241\blue249;}
{\*\expandedcolortbl;;\cssrgb\c15294\c10196\c21961;\cssrgb\c0\c0\c0\c3922;\cssrgb\c100000\c100000\c100000;
\cssrgb\c0\c0\c0;\cssrgb\c90196\c95686\c98039;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
touch \'ab\'a0nom\'a0\'bb = cr\'e9ation fichier\
git branch \'ab\'a0nom\'a0\'bb = cr\'e9ation branche\
git checkout \'ab\'a0nom\'a0\'bb = changer de branche\
git branch = liste des branches\
git status\
\
git add
\f0 \cb4 \'a0\'ab\'a0nom\'a0\'bb = \'e9tape 1\

\f1 \cb3 git commit
\f0 \cb4 \'a0-m \'ab\'a0nom\'a0\'bb = \'e9tape 2\

\f1 \cb3 git push -u origin \'ab\'a0nom\'a0\'bb = \'e9tape 3\
git merge \'ab\'a0nom\'a0\'bb = merge/fusion avec le main = \'e9tape 4\
\
\
git branch -D \'ab\'a0nom\'a0\'bb = effacer la branche apr\'e8s merge\
\pard\pardeftab720\partightenfactor0

\fs28 \cf4 \cb5 git revert HEAD^ 
\fs32 \cf2 \cb3 git revert
\f0 \cb6 \'a0 sert \'e0 annuler des changements commit\'e9s, tandis que\'a0 \'a0
\f1 \cb3 git reset HEAD\'a0
\f0 \cb6 \'a0 permet d'annuler des changements non commit\'e9s.\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 git reset
\f0 \cb4 \'a0 va revenir \'e0 l'\'e9tat pr\'e9c\'e9dent sans cr\'e9er un nouveau commit, alors que \'a0
\f1 \cb3 git revert
\f0 \cb4 \'a0 va cr\'e9er un nouveau commit.\
\

\f1 \cb3 git log
\f0 \cb4 \'a0 \'a0\'a0
\f2\b \'e9num\'e8re en ordre chronologique invers\'e9
\f0\b0 \'a0les commits r\'e9alis\'e9s. Cela signifie que les commits les plus r\'e9cents apparaissent en premier. Cette commande affiche chaque commit avec son\'a0
\f2\b identifiant SHA
\f0\b0 , l'auteur du commit, la date et le message du commit\

\f1 \cb3 git reflog
\f0 \cb4 \'a0 va loguer les commits ainsi que toutes les autres actions que vous avez pu faire en local : vos modifications de messages, vos merges, vos resets, enfin tout, quoiComme \'a0 \'a0
\f1 \cb3 git log\'a0
\f0 \cb4 \'a0 ,\'a0 \'a0
\f1 \cb3 git reflog
\f0 \cb4 \'a0 affiche un identifiant SHA-1 pour chaque action. Il est donc tr\'e8s facile de revenir \'e0 une action donn\'e9e gr\'e2ce au SHA. Cette commande, c'est votre joker, elle assure votre survie en cas d'erreur. Pour revenir \'e0 une action donn\'e9e, on prend les 8 premiers caract\'e8res de son SHA et on fait :\
\pard\pardeftab720\partightenfactor0

\f1\fs21 \cf4 \cb5 git checkout e789e7c\
\
\pard\pardeftab720\sa300\partightenfactor0

\fs32 \cf2 \cb3 git blame
\f0 \cb4 \'a0 va afficher pour chaque ligne modifi\'e9e :\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa60\partightenfactor0
\ls1\ilvl0
\fs24 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
son ID ;\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
l'auteur ;\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
l'horodatage ;\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
le num\'e9ro de la ligne ;\cb1 \
\ls1\ilvl0\cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
le contenu de la ligne.\cb1 \
}